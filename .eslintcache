[{"E:\\React\\search-function\\src\\index.js":"1","E:\\React\\search-function\\src\\App.js":"2","E:\\React\\search-function\\src\\components\\AutoComplete\\index.js":"3","E:\\React\\search-function\\src\\components\\SearchBar\\index.js":"4","E:\\React\\search-function\\src\\components\\SearchBar\\AutoCompleteItem.jsx":"5","E:\\React\\search-function\\src\\components\\SearchResults\\SearchResults.jsx":"6","E:\\React\\search-function\\src\\components\\CompanyList\\CompanyList.jsx":"7","E:\\React\\search-function\\src\\components\\MainComponent\\TableList.jsx":"8"},{"size":280,"mtime":1608609818907,"results":"9","hashOfConfig":"10"},{"size":1316,"mtime":1608637841943,"results":"11","hashOfConfig":"10"},{"size":3593,"mtime":1608634814224,"results":"12","hashOfConfig":"10"},{"size":6052,"mtime":1608637891638,"results":"13","hashOfConfig":"10"},{"size":1490,"mtime":1608634807996,"results":"14","hashOfConfig":"10"},{"size":2574,"mtime":1608612194190,"results":"15","hashOfConfig":"10"},{"size":2603,"mtime":1608609818905,"results":"16","hashOfConfig":"10"},{"size":2781,"mtime":1608638478921,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1eaf58y",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\React\\search-function\\src\\index.js",[],["39","40"],"E:\\React\\search-function\\src\\App.js",["41","42"],"import React, { Component } from \"react\";\r\nimport AutocompletePage from './components/AutoComplete/index.js';\r\nimport TableList from './components/MainComponent/TableList';\r\nimport SearchResults from './components/SearchResults/SearchResults';\r\nimport { Route, NavLink, HashRouter} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className='App'>\r\n                <AutocompletePage />\r\n\r\n                {/* <NavLink to=\"/\">Table</NavLink>\r\n                <NavLink to=\"/results\">SearchResults</NavLink> */}\r\n\r\n                <div className=\"content\">\r\n                    <Route exact path=\"/\" component={TableList}/>\r\n                    <Route exact path=\"/results\" component={SearchResults}/>\r\n                </div>\r\n\r\n                {/* <BrowserRouter>\r\n                    <NavLink className='nav-link' to='/results'>\r\n                        view more\r\n                    </NavLink>\r\n\r\n                    <Switch>\r\n                        <Route exact path='/' component={CompanyList} />\r\n                        <Route exact path='/results' component={SearchResults} />\r\n                    </Switch>\r\n                </BrowserRouter> */}\r\n            </div>\r\n        </HashRouter>\r\n        \r\n    );\r\n};\r\n\r\nexport default App;\r\n","E:\\React\\search-function\\src\\components\\AutoComplete\\index.js",["43","44"],"import React, { useState } from 'react';\r\nimport CompanyData from '../../assets/data.json';\r\nimport Autocomplete from '../SearchBar/index';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport './index.css';\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n  \r\n  const StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n  }))(MenuItem);\r\n  \r\nconst AutocompletePage = () => {\r\n    const [name, setName] = useState('');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n  \r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    return (\r\n        <div className='d-flex justify-content-center mb-3'>\r\n            <div className='search-bar-container'>\r\n            {/* <Button\r\n                aria-controls=\"customized-menu\"\r\n                aria-haspopup=\"true\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClick}\r\n                >\r\n                All\r\n                </Button> */}\r\n                <Autocomplete\r\n                    data={CompanyData}\r\n                    onSelect={(name) => setName(name)}\r\n                ></Autocomplete>\r\n\r\n            </div>\r\n\r\n                <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                >\r\n\r\n                    <StyledMenuItem>\r\n                        <ListItemText primary=\"Projects\" />\r\n                    </StyledMenuItem>\r\n                    <StyledMenuItem>\r\n                        <ListItemText primary=\"Contractors\" />\r\n                    </StyledMenuItem>\r\n                    <StyledMenuItem>\r\n                        <ListItemText primary=\"Resources\" />\r\n                    </StyledMenuItem>\r\n                </StyledMenu>\r\n\r\n                \r\n\r\n                {name && (\r\n                        <pre className='text-left'>{JSON.stringify(name, 0, 2)}</pre>\r\n                    )}\r\n            \r\n      </div>\r\n)};\r\n    \r\n// const AutocompletePage = () => {\r\n//     const [name, setName] = useState('');\r\n//     return (\r\n//         <>\r\n//             <div className='d-flex justify-content-center mb-3'>\r\n//                 <div className='search-bar-container'>\r\n    \r\n//                     <Autocomplete\r\n//                         data={CompanyData}\r\n//                         onSelect={(name) => setName(name)}\r\n//                     />\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {name && (\r\n//                 <pre className='text-left'>{JSON.stringify(name, 0, 2)}</pre>\r\n//             )}\r\n//         </>\r\n//     );\r\n// };\r\n\r\nexport default AutocompletePage;\r\n","E:\\React\\search-function\\src\\components\\SearchBar\\index.js",["45","46"],"import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport AutoCompleteItem from './AutoCompleteItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\nconst AutoComplete = ({ data, onSelect }) => {\r\n    const classes = useStyles();\r\n    const [isVisbile, setVisiblity] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [cursor, setCursor] = useState(-1);\r\n\r\n    const searchContainer = useRef(null);\r\n    const searchResultRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    const scrollIntoView = (position) => {\r\n        searchResultRef.current.parentNode.scrollTo({\r\n            top: position,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (cursor < 0 || cursor > suggestions.length || !searchResultRef) {\r\n            return () => {};\r\n        }\r\n\r\n        let listItems = Array.from(searchResultRef.current.children);\r\n        listItems[cursor] && scrollIntoView(listItems[cursor].offsetTop);\r\n    }, [cursor]);\r\n\r\n    const suggestions = useMemo(() => {\r\n        if (!search) return data;\r\n\r\n        setCursor(-1);\r\n        scrollIntoView(0);\r\n\r\n        return data.filter(\r\n            (item) =>\r\n                item.status.toLowerCase().includes(search.toLowerCase()) ||\r\n                item.assigned_to.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n    }, [data, search]);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            searchContainer.current &&\r\n            !searchContainer.current.contains(event.target)\r\n        ) {\r\n            hideSuggestion();\r\n        }\r\n    };\r\n\r\n    const showSuggestion = () => setVisiblity(true);\r\n\r\n    const hideSuggestion = () => setVisiblity(false);\r\n\r\n    const keyboardNavigation = (e) => {\r\n        \r\n        if (e.key === 'ArrowDown') {\r\n            isVisbile\r\n                ? setCursor((c) => (c < suggestions.length - 1 ? c + 1 : c))\r\n                : showSuggestion();\r\n        }\r\n\r\n        if (e.key === 'ArrowUp') {\r\n            setCursor((c) => (c > 0 ? c - 1 : 0));\r\n        }\r\n\r\n        if (e.key === 'Escape') {\r\n            hideSuggestion();\r\n        }\r\n\r\n        if (e.key === 'Enter' && cursor > 0) {\r\n            setSearch(suggestions[cursor].status);\r\n            hideSuggestion();\r\n            onSelect(suggestions[cursor]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{ height: '100%', marginTop: '30px', marginBottom: '50px' }}\r\n            ref={searchContainer}\r\n        >\r\n            <TextField\r\n                label=\"Search tasks, @Users...\"\r\n                type='text'\r\n                name='search'\r\n                id=\"outlined-basic\"\r\n                variant=\"outlined\"\r\n                className='search-bar'\r\n                autoComplete='off'\r\n                value={search}\r\n                onClick={showSuggestion}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                onKeyDown={(e) => keyboardNavigation(e)}\r\n                InputProps={{\r\n                endAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                    </InputAdornment>\r\n                )\r\n                }}\r\n            />\r\n\r\n            <div\r\n                className={`search-result ${\r\n                    isVisbile ? 'visible' : 'invisible'\r\n                }`}\r\n            >\r\n                <br/>\r\n                <div className=\"ml-5\">\r\n                    <Link href=\"#results\">\r\n                        <Button type='submit' aria-controls=\"customized-menu\" aria-haspopup=\"true\" variant=\"contained\" color=\"primary\">\r\n                            Projects\r\n                        </Button>\r\n                    </Link>\r\n                    <Button className=\"ml-1\" type='submit' aria-controls=\"customized-menu\" aria-haspopup=\"true\" variant=\"contained\" color=\"primary\">\r\n                        Contractors\r\n                    </Button>\r\n                    <Button className=\"ml-1\" type='submit' aria-controls=\"customized-menu\" aria-haspopup=\"true\" variant=\"contained\" color=\"primary\">\r\n                        Resources\r\n                    </Button>\r\n                    <br/><br/>\r\n                </div>\r\n                <ul className='list-group' ref={searchResultRef}>\r\n                    {suggestions.map((item, idx) => (\r\n                        <AutoCompleteItem\r\n                            key={idx}\r\n                            onSelectItem={() => {\r\n                                hideSuggestion();\r\n                                setSearch(item.project_name);\r\n                                onSelect(item);\r\n                            }}\r\n                            isHighlighted={cursor === idx ? true : false}\r\n                            {...item}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n                <Link href=\"#results\" style={{textDecoration: 'none'}}>\r\n                    <IconButton className={classes.margin} size=\"small\" style={{color: '#0000FF'}}>\r\n                        View More <ArrowRightAltIcon fontSize=\"large\" className={classes.extendedIcon} />\r\n                    </IconButton>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoComplete;\r\n","E:\\React\\search-function\\src\\components\\SearchBar\\AutoCompleteItem.jsx",[],["47","48"],"E:\\React\\search-function\\src\\components\\SearchResults\\SearchResults.jsx",[],"E:\\React\\search-function\\src\\components\\CompanyList\\CompanyList.jsx",[],"E:\\React\\search-function\\src\\components\\MainComponent\\TableList.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":5,"column":17,"nodeType":"55","messageId":"56","endLine":5,"endColumn":24},{"ruleId":"53","severity":1,"message":"58","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":14},{"ruleId":"53","severity":1,"message":"59","line":47,"column":11,"nodeType":"55","messageId":"56","endLine":47,"endColumn":22},{"ruleId":"60","severity":1,"message":"61","line":37,"column":8,"nodeType":"62","endLine":37,"endColumn":10,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":53,"column":8,"nodeType":"62","endLine":53,"endColumn":16,"suggestions":"65"},{"ruleId":"49","replacedBy":"66"},{"ruleId":"51","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'Button' is defined but never used.","'handleClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.","ArrayExpression",["70"],"React Hook useEffect has a missing dependency: 'suggestions.length'. Either include it or remove the dependency array.",["71"],["68"],["69"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [handleClickOutside]",{"range":"76","text":"77"},"Update the dependencies array to be: [cursor, suggestions.length]",{"range":"78","text":"79"},[1278,1280],"[handleClickOutside]",[1766,1774],"[cursor, suggestions.length]"]